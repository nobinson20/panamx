matrix eigen(double a, double b, double c) {
    matrix vec;
    double e1;
    double e2;
    vec = <1, 2>;
    e1 = (-b+sqrt((b*b-4.0*a*c))) / (2.0 * a);
    e2 = (-b-sqrt((b*b-4.0*a*c))) / (2.0 * a);
    vec[0][0] = e1;
    vec[0][1] = e2;
    return vec;
}

matrix combineTopDown(matrix a, matrix b) {
    int i;
    int j;
    int arow;
    int acol;
    int brow;
    int bcol;
    matrix new;

    arow = matrixHeight(a);
    acol = matrixWidth(a);
    brow = matrixHeight(b);
    bcol = matrixWidth(b);

    if (acol != bcol) {
        prints("Cannot combine matrices with different widths");
        return a;
    }

    new = <arow+brow, acol>;
    for (i = 0; i < arow; i++) {
        for (j = 0; j < acol; j++) {
            new[i][j] = a[i][j];
        }
    }
    for (i = arow; i < arow+brow; i++) {
        for (j = 0; j < bcol; j++) {
            new[i][j] = b[i-arow][j];
        }
    }
    return new;
}

int main() {
    matrix c1;
    matrix c2;
    matrix A;
    double a;
    double b;
    double c;
    matrix eigenvec;

    c1 = [3, 2];
    c2 = [1, 4];

    A = combineTopDown(c1, c2);

    a = 1.0;
    b = -A[0][0] - A[1][1];
    c = A[0][0] * A[1][1] - A[0][1] * A[1][0];

    eigenvec = eigen(a, b, c);

    prints("Eigenvalues:");
    printm(eigenvec);
    return 0;
}
